@use 'utils/main' as *;

// note: $flipDuration and $jumpDuration are set in ./src/settings.js

.hopkins-hurdle {
  .guess {

    input {
      background-color: var(--input-bg);
      border: 4px var(--input-border) solid;
      color: var(--input-text);
      caret-color: transparent;
      font-size: 20px;
      height: 30px;
      margin: 2px;
      text-align: center;
      outline: none;
      width: 30px;

      &:focus {
        background-color: var(--input-bg-focus);
        border: 4px var(--input-border-focus) solid;
        color: var(--input-text-focus);
      }

      &.space {
        height: 30px;
        width: 5px;
        opacity: 0; // screen readers will be able to read this
      }

      &:not(.animate) {
        &.pass {
          background-color: var(--correct-spot-bg);
          border-color: var(--correct-spot-bg);
          color: var(--correct-spot-text);
        }

        &.fail {
          background-color: var(--wrong-bg);
          border-color: var(--wrong-bg);
          color: var(--wrong-text);
        }

        &.shuffle {
          background-color: var(--wrong-spot-bg);
          border-color: var(--wrong-spot-bg);
        }
      }
      
      &.animate.flip {
        &.pass {
          @include flip(flip-pass, var(--correct-spot-bg), var(--correct-spot-text));
          animation: flip-pass #{$flipDuration}ms ease forwards;
        }

        &.shuffle {
          @include flip(flip-shuffle, var(--wrong-spot-bg), var(--wrong-spot-text));
          animation: flip-shuffle #{$flipDuration}ms ease forwards;
        }

        &.fail {
          @include flip(flip-fail, var(--wrong-bg), var(--wrong-text));
          animation: flip-fail #{$flipDuration}ms ease forwards;
        }
      }

      &.animate.jump {
        @include jump();
        animation: flip-pass #{$flipDuration}ms ease forwards, jump #{$jumpDuration}ms ease forwards;
      }
    }
  }
}
